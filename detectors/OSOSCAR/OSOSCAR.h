#ifndef OSOSCAR_H
#define OSOSCAR_H

/* *******************************************************************************************************
 * OSOSCAR Class
 * v1.0 13/07/2018
 * class to store OSCAR data generated by the OSCAR-tool program
 * implemented by Daniele Dell'Aquila (dellaquila.daniele@gmail.com)
 * 
 * The class is composed by:
 * 1 OSOSCARTelescope *
 * This is an array of OSCAR telescopes
 *
 *
 * - OSOSCARTelescope
 * | - OSOSCARStrip *
 * | - OSOSCARPad *
 * 
 * - OSOSCARStrip
 * | - efront
 * | - timefront
 * 
 * - OSOSCARPad
 * | - epad
 * | - timepad
 */

#include <TTree.h>
#include <vector>
#include <OSDetector.h>
#include <OSOSCARMap.h>
#include <OSOSCARTelescope.h>
#include <OSOSCARAnalyzer.h>
#include <OSOSCARRootEvent.h>
#include <OSOSCARPhysicalParticle.h>

#include <OSCARShared.h>

class OSOSCAR : public OSDetector
{
public :
  OSOSCAR(const char *, int);                      //!Constructor
  ~OSOSCAR();                                      //!Destructor

  void Clear() override;                           //!Clear. Not used in the current implementation.

  void InitTTreeBranch(TTree *) override;          //!Initialize TTree Branch containing detector ROOT type
  void BuildEvent() override;                      //!Calls individual electronic modules to feel detector branches
  void FillMappedData() override;                  //!Stores mapped data in detector ROOT class to be written on the output tree

private :
  OSOSCARTelescope ** fOSCARMapped;                //!Cluster of OSOSCARTelescope objects
  OSOSCARRootEvent * fevt;                         //!RootEvent type of the detector
  OSOSCARAnalyzer  * fTheAnalyzer;                 //!Detector analyzer
  
  std::vector<OSOSCARPhysicalParticle> * fParticle; //!Analyzed event

};

#endif